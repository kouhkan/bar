version: "3.9"

services:
  rabbitmq:
    image: rabbitmq:latest
    networks:
      - main
    ports:
      - "5672:5672"
    restart: always

  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - main

  db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD="trust"

    networks:
      - main
    ports:
      - "5432:5432"
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql/data

  celery:
    restart: on-failure
    build:
      context: .
    command: celery -A config worker -l info -E
    depends_on:
      - rabbitmq
      - redis
    environment:
      - C_FORCE_ROOT="true"
    networks:
      - main

  app:
    build:
      context: .
      dockerfile: docker/prod/python/Dockerfile
    command: gunicorn -w 4 config.wsgi -b 0.0.0.0:8000
    volumes:
      - .:/app
      - staticfiles:/staticfiles
    depends_on:
      - db
      - rabbitmq
      - redis
      - celery
    ports:
      - "8000:8000"
    expose:
      - 8000
    networks:
      - main
    restart: on-failure
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.prod

  nginx:
    build:
      context: .
      dockerfile: docker/prod/nginx/Dockerfile
    depends_on:
      - app
    networks:
      - main
    ports:
      - "80:80"
    restart: on-failure
    volumes:
      - staticfiles:/staticfiles



networks:
  main:

volumes:
  postgres_data:
  staticfiles: